<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd ">

	<!-- 扫描bean资源  ps:排除controller  因为加载 DispatcherServlet 的时候会 扫描 controller-->
	<context:component-scan base-package="com.yuelinghui">
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   	</context:component-scan>
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:resources.properties" />

	<!-- 阿里 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${druid.connection.url}"/>
		<property name="username" value="${druid.connection.username}"/>
		<property name="password" value="${druid.connection.password}"/>
		<property name="driverClassName" value="${druid.connection.driverclass}"/>
		<property name="filters" value="${druid.connection.filters}"/>
		<property name="maxActive" value="${druid.connection.maxActive}"/><!-- 最大并发连接数 -->
		<property name="initialSize" value="${druid.connection.initialSize}"/><!-- 初始化连接数量 -->
		<property name="maxWait" value="${druid.connection.maxWait}"/><!-- 配置获取连接等待超时的时间 -->
		<property name="minIdle" value="${druid.connection.minIdle}"/><!-- 最小空闲连接数 -->
		<property name="timeBetweenEvictionRunsMillis"
				  value="${druid.connection.timeBetweenEvictionRunsMillis}"/><!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis"
				  value="${druid.connection.minEvictableIdleTimeMillis}"/><!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="maxOpenPreparedStatements" value="${druid.connection.maxOpenPreparedStatements}"/>
	</bean>

	<!-- 注入数据源 到 DataSourceHolder -->
	<bean id="dataSourceHolder" class="cn.assist.easydao.dao.datasource.DataSourceHolder">
		<property name="dataSource" ref="dataSource"/>
		<property name="dev" value="${is.dev}"/>
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="springFactory" class="com.yuelinghui.base.helper.SpringFactory"/>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yuelinghui.dao" />
	</bean>


	<!-- 开启切面支持 -->
	<aop:aspectj-autoproxy/>

	<!-- redis config start -->
	<!-- redis 相关配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg ref="poolConfig"/>
		<constructor-arg value="${redis.host}"/>
		<constructor-arg type="int" value="${redis.port}"/>
		<constructor-arg type="int" value="${redis.timeout}"/>
		<constructor-arg type="java.lang.String" value="${redis.password}"/>
		<constructor-arg type="int" value="${redis.dbindex}"/>
	</bean>

	<bean id="redisClient" class="com.yuelinghui.redis.RedisClient">
		<constructor-arg name="jedisPool" ref="jedisPool"/>
		<constructor-arg name="expire" value="${redis.default.expire}"/>
	</bean>
</beans>